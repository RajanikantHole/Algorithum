import Foundation

struct DateUtils {
    private static var formatterCache = [String: DateFormatter]()
    
    static func formatEpoch(_ epoch: TimeInterval, format: String, timeZone: TimeZone = .current) -> String {
        let date = Date(timeIntervalSince1970: epoch)
        let formatter = cachedFormatter(for: format, timeZone: timeZone)
        return formatter.string(from: date)
    }
    
    private static func cachedFormatter(for format: String, timeZone: TimeZone) -> DateFormatter {
        let key = "\(format)_\(timeZone.identifier)"
        if let cached = formatterCache[key] { return cached }
        
        let formatter = DateFormatter()
        formatter.dateFormat = format
        formatter.timeZone = timeZone
        formatterCache[key] = formatter
        return formatter
    }
}
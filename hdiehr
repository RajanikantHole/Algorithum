import UIKit

class CustomActivityViewController: UIViewController {
    
    let imageView: UIImageView = {
        let imageView = UIImageView()
        imageView.translatesAutoresizingMaskIntoConstraints = false
        imageView.contentMode = .scaleAspectFit
        imageView.image = UIImage(named: "yourImageName") // Replace with your image
        return imageView
    }()
    
    let activityViewController: UIActivityViewController
    
    init(activityItems: [Any]) {
        self.activityViewController = UIActivityViewController(activityItems: activityItems, applicationActivities: nil)
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    func setupUI() {
        view.backgroundColor = .white
        
        // Add image view to header
        view.addSubview(imageView)
        
        // Set image view constraints
        NSLayoutConstraint.activate([
            imageView.topAnchor.constraint(equalTo: view.topAnchor),
            imageView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            imageView.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            imageView.heightAnchor.constraint(equalToConstant: 200) // Adjust height as needed
        ])
        
        // Present UIActivityViewController below the header
        addChild(activityViewController)
        activityViewController.view.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(activityViewController.view)
        activityViewController.didMove(toParent: self)
        
        // Set activity view controller constraints
        NSLayoutConstraint.activate([
            activityViewController.view.topAnchor.constraint(equalTo: imageView.bottomAnchor),
            activityViewController.view.leadingAnchor.constraint(equalTo: view.leadingAnchor),
            activityViewController.view.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            activityViewController.view.bottomAnchor.constraint(equalTo: view.bottomAnchor)
        ])
    }
}
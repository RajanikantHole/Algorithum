import SwiftUI
import UIKit

// Step 1: Define the Custom UIActivityItemSource
class CustomActivityItemSource: NSObject, UIActivityItemSource {
    var parameter: String
    
    init(parameter: String) {
        self.parameter = parameter
    }
    
    func activityViewControllerPlaceholderItem(_ activityViewController: UIActivityViewController) -> Any {
        return "Placeholder text"
    }
    
    func activityViewController(_ activityViewController: UIActivityViewController, itemForActivityType activityType: UIActivity.ActivityType?) -> Any? {
        return "Shared data with parameter: \(parameter)"
    }
}

// Step 2: Create the SwiftUI UIViewControllerRepresentable
struct ActivityView: UIViewControllerRepresentable {
    var activityItems: [Any]
    var excludedActivityTypes: [UIActivity.ActivityType]?
    
    func makeUIViewController(context: Context) -> UIActivityViewController {
        let activityViewController = UIActivityViewController(activityItems: activityItems, applicationActivities: nil)
        activityViewController.excludedActivityTypes = excludedActivityTypes
        return activityViewController
    }
    
    func updateUIViewController(_ uiViewController: UIActivityViewController, context: Context) {
        // No update logic required for this example
    }
}

// Step 3: Use the ActivityView in SwiftUI
struct ContentView: View {
    @State private var isSharing = false
    
    var body: some View {
        VStack {
            Button("Share") {
                let itemSource = CustomActivityItemSource(parameter: "My Custom Parameter")
                isSharing = true
            }
            .sheet(isPresented: $isSharing) {
                let itemSource = CustomActivityItemSource(parameter: "My Custom Parameter")
                ActivityView(
                    activityItems: [itemSource],
                    excludedActivityTypes: [.addToReadingList, .postToFacebook]
                )
            }
        }
        .padding()
    }
}

// Step 4: App Entry Point
@main
struct MyApp: App {
    var body: some Scene {
        WindowGroup {
            ContentView()
        }
    }
}